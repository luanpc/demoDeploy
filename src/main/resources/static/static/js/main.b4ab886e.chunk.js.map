{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useForm","register","handleSubmit","useState","entities","setEntities","data","a","id","console","log","axios","post","alert","className","onSubmit","defaultValue","type","onClick","get","response","map","e","text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAoDeA,MAzCf,WAEE,MAAmCC,cAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAClB,EAAgCC,mBAA0B,IAA1D,mBAAOC,EAAP,KAAiBC,EAAjB,KAHa,4CAKb,WAAoBC,GAApB,SAAAC,EAAA,sEAEID,EAAKE,GAAK,EACVC,QAAQC,IAAIJ,GAHhB,SAIUK,IAAMC,KAAK,OAAQN,GAJ7B,OAKIO,MAAM,0BALV,gDAOIA,MAAM,EAAD,IAPT,0DALa,sBAiBb,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAMC,SAAUb,GAnBP,8CAmBT,UACE,mCAAOc,aAAa,QAAWf,EAAS,UAExC,uBAAOgB,KAAK,cAGd,wBAAQC,QAAO,sBAAE,4BAAAX,EAAA,+EAEUI,IAAMQ,IAAqB,QAFrC,OAEPC,EAFO,OAGbf,EAAYe,EAASd,MACrBG,QAAQC,IAAIN,GAJC,gDAMbS,MAAM,EAAD,IANQ,yDAAjB,0BAWCT,EAASiB,KAAI,SAACC,GAAD,OAAO,oCAAOA,EAAEC,KAAT,cCjCZC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4ab886e.chunk.js","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport './App.css';\nimport { useState } from \"react\";\n\nclass MyEntity {\n  id: number;\n  text: string;\n}\n\n\nfunction App() {\n\n  const { register, handleSubmit } = useForm<MyEntity>();\n  const [entities, setEntities] = useState<Array<MyEntity>>([]);\n\n  async function send(data: MyEntity) {\n    try {\n      data.id = 1;\n      console.log(data);\n      await axios.post(\"/api\", data);\n      alert(\"entity has been added.\");\n    } catch (err) {\n      alert(err);\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit(send)}>\n        <input defaultValue=\"text\" {...register(\"text\")} />\n\n        <input type=\"submit\" />\n      </form>\n\n      <button onClick={async () => {\n        try {\n          const response = await axios.get<Array<MyEntity>>(\"/api\");\n          setEntities(response.data);\n          console.log(entities);\n        } catch (err) {\n          alert(err);\n        }\n      }}>\n        Get Entities\n      </button>\n      {entities.map((e) => <div> {e.text} </div>)}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}